name:               neat-interpolation
version:            0.5.1.3
synopsis:
  A quasiquoter for neat and simple multiline text interpolation

description:
  A quasiquoter for producing Text values with support for
  a simple interpolation of input values.
  It removes the excessive indentation from the input and
  accurately manages the indentation of all lines of the interpolated variables.

category:           String, QuasiQuotes
license:            MIT
license-file:       LICENSE
copyright:          (c) 2013, Nikita Volkov
author:             Nikita Volkov <nikita.y.volkov@mail.ru>
maintainer:         Nikita Volkov <nikita.y.volkov@mail.ru>
homepage:           https://github.com/nikita-volkov/neat-interpolation
bug-reports:        https://github.com/nikita-volkov/neat-interpolation/issues
build-type:         Simple
cabal-version:      >=1.10
extra-source-files: CHANGELOG.md

source-repository head
  type:     git
  location: git://github.com/nikita-volkov/neat-interpolation.git

library
  hs-source-dirs:     library
  default-extensions:
    NoImplicitPrelude
    NoMonomorphismRestriction
    BangPatterns
    BinaryLiterals
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveDataTypeable
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveTraversable
    DuplicateRecordFields
    EmptyDataDecls
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTs
    GeneralizedNewtypeDeriving
    LambdaCase
    LiberalTypeSynonyms
    MagicHash
    MultiParamTypeClasses
    MultiWayIf
    OverloadedLists
    OverloadedStrings
    ParallelListComp
    PatternGuards
    PatternSynonyms
    QuasiQuotes
    RankNTypes
    RecordWildCards
    ScopedTypeVariables
    StandaloneDeriving
    StrictData
    TemplateHaskell
    TupleSections
    TypeApplications
    TypeFamilies
    TypeOperators
    UnboxedTuples

  default-language:   Haskell2010
  exposed-modules:    NeatInterpolation
  other-modules:
    NeatInterpolation.Parsing
    NeatInterpolation.Prelude
    NeatInterpolation.String

  build-depends:
      base >=4.9 && <5
    , megaparsec >=7 && <10
    , template-haskell >=2.8 && <3
    , text >=1 && <3

test-suite test
  type:               exitcode-stdio-1.0
  hs-source-dirs:     test
  default-extensions:
    NoImplicitPrelude
    NoMonomorphismRestriction
    BangPatterns
    BinaryLiterals
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveDataTypeable
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveTraversable
    DuplicateRecordFields
    EmptyDataDecls
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTs
    GeneralizedNewtypeDeriving
    LambdaCase
    LiberalTypeSynonyms
    MagicHash
    MultiParamTypeClasses
    MultiWayIf
    OverloadedLists
    OverloadedStrings
    ParallelListComp
    PatternGuards
    PatternSynonyms
    QuasiQuotes
    RankNTypes
    RecordWildCards
    ScopedTypeVariables
    StandaloneDeriving
    StrictData
    TemplateHaskell
    TupleSections
    TypeApplications
    TypeFamilies
    TypeOperators
    UnboxedTuples

  default-language:   Haskell2010
  main-is:            Main.hs
  build-depends:
      neat-interpolation
    , QuickCheck >=2.13 && <3
    , quickcheck-instances >=0.3.22 && <0.4
    , rerebase <2
    , tasty >=1.2.3 && <2
    , tasty-hunit >=0.10.0.2 && <0.11
    , tasty-quickcheck >=0.10.1 && <0.11
